#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>

using namespace std;

// Function to check if a number is prime
bool isPrime(int n) {
    if (n <= 1) return false;
    for (int i = 2; i <= sqrt(n); i++) {
        if (n % i == 0) return false;
    }
    return true;
}

// Function to format the array as per the specified conditions
vector<int> formatArray(vector<int>& arr) {
    vector<int> primes, nonPrimes;

    // Separate primes and non-primes
    for (int num : arr) {
        if (isPrime(num)) {
            primes.push_back(num);
        } else {
            nonPrimes.push_back(num);
        }
    }

    // Sort primes in descending order
    sort(primes.begin(), primes.end(), greater<int>());

    // Sort non-primes in descending order
    sort(nonPrimes.begin(), nonPrimes.end(), greater<int>());

    // Create the result array
    vector<int> result;
    
    // Add the largest prime to the front
    if (!primes.empty()) {
        result.push_back(primes.front());
    }
    
    // Add non-prime numbers in descending order
    result.insert(result.end(), nonPrimes.begin(), nonPrimes.end());
    
    // Add the smallest prime to the back
    if (!primes.empty()) {
        result.push_back(primes.back());
    }

    return result;
}

int main() {
    // Test Case 1
    vector<int> arr1 = {5, 1, 8, 11, 2};
    vector<int> result1 = formatArray(arr1);
    cout << "Result 1: ";
    for (int num : result1) {
        cout << num << " ";
    }
    cout << endl;

    vector<int> arr2 = {1, 6, 4, 13, 9, 3};
    vector<int> result2 = formatArray(arr2);
    cout << "Result 2: ";
    for (int num : result2) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
